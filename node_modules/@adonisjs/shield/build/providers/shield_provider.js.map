{"version":3,"sources":["../../providers/shield_provider.ts"],"sourcesContent":["/*\n * @adonisjs/shield\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { ApplicationService } from '@adonisjs/core/types'\n\nimport type { ShieldConfig } from '../src/types.js'\nimport ShieldMiddleware from '../src/shield_middleware.js'\n\n/**\n * Provider to register shield middleware\n */\nexport default class ShieldProvider {\n  constructor(protected app: ApplicationService) {}\n\n  /**\n   * Register ShieldMiddleware to the container\n   */\n  async register() {\n    this.app.container.bind(ShieldMiddleware, async () => {\n      const config = this.app.config.get<ShieldConfig>('shield', {})\n      const encryption = await this.app.container.make('encryption')\n\n      if (this.app.usingEdgeJS) {\n        const edge = await import('edge.js')\n        return new ShieldMiddleware(config, encryption, edge.default)\n      }\n\n      return new ShieldMiddleware(config, encryption)\n    })\n  }\n}\n"],"mappings":";;;;;;;;AAiBA,IAAqB,iBAArB,MAAoC;AAAA,EAClC,YAAsB,KAAyB;AAAzB;AAAA,EAA0B;AAAA;AAAA;AAAA;AAAA,EAKhD,MAAM,WAAW;AACf,SAAK,IAAI,UAAU,KAAK,kBAAkB,YAAY;AACpD,YAAM,SAAS,KAAK,IAAI,OAAO,IAAkB,UAAU,CAAC,CAAC;AAC7D,YAAM,aAAa,MAAM,KAAK,IAAI,UAAU,KAAK,YAAY;AAE7D,UAAI,KAAK,IAAI,aAAa;AACxB,cAAM,OAAO,MAAM,OAAO,SAAS;AACnC,eAAO,IAAI,iBAAiB,QAAQ,YAAY,KAAK,OAAO;AAAA,MAC9D;AAEA,aAAO,IAAI,iBAAiB,QAAQ,UAAU;AAAA,IAChD,CAAC;AAAA,EACH;AACF;","names":[]}