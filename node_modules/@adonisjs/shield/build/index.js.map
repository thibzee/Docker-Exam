{"version":3,"sources":["../stubs/main.ts","../configure.ts","../src/define_config.ts"],"sourcesContent":["/*\n * @adonisjs/shield\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { getDirname } from '@poppinss/utils'\n\nexport const stubsRoot = getDirname(import.meta.url)\n","/*\n * @adonisjs/shield\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type Configure from '@adonisjs/core/commands/configure'\nimport { stubsRoot } from './stubs/main.js'\n\n/**\n * Configures the package\n */\nexport async function configure(command: Configure) {\n  const codemods = await command.createCodemods()\n\n  /**\n   * Publish config file\n   */\n  await codemods.makeUsingStub(stubsRoot, 'config/shield.stub', {})\n\n  /**\n   * Register provider\n   */\n  await codemods.updateRcFile((rcFile) => {\n    rcFile.addProvider('@adonisjs/shield/shield_provider')\n  })\n\n  /**\n   * Register middleware\n   */\n  await codemods.registerMiddleware('router', [\n    {\n      path: '@adonisjs/shield/shield_middleware',\n    },\n  ])\n}\n","/*\n * @adonisjs/shield\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { ShieldConfig } from './types.js'\n\n/**\n * Define shield configuration\n */\nexport function defineConfig(config: Partial<ShieldConfig>): ShieldConfig {\n  return {\n    csp: {\n      enabled: false,\n      ...config.csp,\n    },\n    csrf: {\n      enabled: false,\n      ...config.csrf,\n    },\n    hsts: {\n      enabled: false,\n      ...config.hsts,\n    },\n    contentTypeSniffing: {\n      enabled: false,\n      ...config.contentTypeSniffing,\n    },\n    xFrame: {\n      enabled: false,\n      ...config.xFrame,\n    },\n  } satisfies ShieldConfig\n}\n"],"mappings":";;;;;;;AASA,SAAS,kBAAkB;AAEpB,IAAM,YAAY,WAAW,YAAY,GAAG;;;ACInD,eAAsB,UAAU,SAAoB;AAClD,QAAM,WAAW,MAAM,QAAQ,eAAe;AAK9C,QAAM,SAAS,cAAc,WAAW,sBAAsB,CAAC,CAAC;AAKhE,QAAM,SAAS,aAAa,CAAC,WAAW;AACtC,WAAO,YAAY,kCAAkC;AAAA,EACvD,CAAC;AAKD,QAAM,SAAS,mBAAmB,UAAU;AAAA,IAC1C;AAAA,MACE,MAAM;AAAA,IACR;AAAA,EACF,CAAC;AACH;;;ACxBO,SAAS,aAAa,QAA6C;AACxE,SAAO;AAAA,IACL,KAAK;AAAA,MACH,SAAS;AAAA,MACT,GAAG,OAAO;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,GAAG,OAAO;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,SAAS;AAAA,MACT,GAAG,OAAO;AAAA,IACZ;AAAA,IACA,qBAAqB;AAAA,MACnB,SAAS;AAAA,MACT,GAAG,OAAO;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,SAAS;AAAA,MACT,GAAG,OAAO;AAAA,IACZ;AAAA,EACF;AACF;","names":[]}