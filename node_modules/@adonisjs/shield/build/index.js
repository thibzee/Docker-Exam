import {
  cspKeywords,
  errors_exports
} from "./chunk-Q7AVWHS5.js";
import "./chunk-CSAU5B4Q.js";

// stubs/main.ts
import { getDirname } from "@poppinss/utils";
var stubsRoot = getDirname(import.meta.url);

// configure.ts
async function configure(command) {
  const codemods = await command.createCodemods();
  await codemods.makeUsingStub(stubsRoot, "config/shield.stub", {});
  await codemods.updateRcFile((rcFile) => {
    rcFile.addProvider("@adonisjs/shield/shield_provider");
  });
  await codemods.registerMiddleware("router", [
    {
      path: "@adonisjs/shield/shield_middleware"
    }
  ]);
}

// src/define_config.ts
function defineConfig(config) {
  return {
    csp: {
      enabled: false,
      ...config.csp
    },
    csrf: {
      enabled: false,
      ...config.csrf
    },
    hsts: {
      enabled: false,
      ...config.hsts
    },
    contentTypeSniffing: {
      enabled: false,
      ...config.contentTypeSniffing
    },
    xFrame: {
      enabled: false,
      ...config.xFrame
    }
  };
}
export {
  configure,
  cspKeywords,
  defineConfig,
  errors_exports as errors,
  stubsRoot
};
//# sourceMappingURL=index.js.map