{"version":3,"sources":["../src/shield_middleware.ts"],"sourcesContent":["/*\n * @adonisjs/shield\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type {} from 'node:http'\nimport type { Edge } from 'edge.js'\nimport type {} from '@adonisjs/core/http'\nimport type { EncryptionService } from '@adonisjs/core/types'\n\nimport * as shield from './guards/main.js'\nimport type { ShieldConfig } from './types.js'\nimport type { HttpContext } from '@adonisjs/core/http'\n\ndeclare module '@adonisjs/core/http' {\n  interface Request {\n    csrfToken: string\n  }\n\n  interface Response {\n    nonce: string\n  }\n}\n\n/**\n * Extending the Node.js ServerResponse with\n * our new `nonce` property\n */\ndeclare module 'node:http' {\n  export interface ServerResponse {\n    nonce: string\n  }\n}\n\n/**\n * Shield middleware to protect web applications against common\n * web attacks\n */\nexport default class ShieldMiddleware {\n  #guards: ((ctx: HttpContext) => any)[] = []\n\n  constructor(config: ShieldConfig, encryption: EncryptionService, edge?: Edge) {\n    this.#guards = [\n      shield.csrfFactory(config.csrf || {}, encryption, edge),\n      shield.cspFactory(config.csp || {}),\n      shield.frameGuardFactory(config.xFrame || {}),\n      shield.hstsFactory(config.hsts || {}),\n      shield.noSniffFactory(config.contentTypeSniffing || {}),\n    ]\n  }\n\n  /**\n   * Handle request\n   */\n  async handle(ctx: HttpContext, next: () => Promise<void>) {\n    for (let action of this.#guards) {\n      await action(ctx)\n    }\n\n    await next()\n  }\n}\n"],"mappings":";;;;;;;;;AA0CA,IAAqB,mBAArB,MAAsC;AAAA,EACpC,UAAyC,CAAC;AAAA,EAE1C,YAAY,QAAsB,YAA+B,MAAa;AAC5E,SAAK,UAAU;AAAA,MACN,YAAY,OAAO,QAAQ,CAAC,GAAG,YAAY,IAAI;AAAA,MAC/C,WAAW,OAAO,OAAO,CAAC,CAAC;AAAA,MAC3B,kBAAkB,OAAO,UAAU,CAAC,CAAC;AAAA,MACrC,YAAY,OAAO,QAAQ,CAAC,CAAC;AAAA,MAC7B,eAAe,OAAO,uBAAuB,CAAC,CAAC;AAAA,IACxD;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,KAAkB,MAA2B;AACxD,aAAS,UAAU,KAAK,SAAS;AAC/B,YAAM,OAAO,GAAG;AAAA,IAClB;AAEA,UAAM,KAAK;AAAA,EACb;AACF;","names":[]}