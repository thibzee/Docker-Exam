{"version":3,"sources":["../../providers/session_provider.ts"],"sourcesContent":["/*\n * @adonisjs/session\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { configProvider } from '@adonisjs/core'\nimport { RuntimeException } from '@poppinss/utils'\nimport type { ApplicationService } from '@adonisjs/core/types'\n\nimport type { Session } from '../src/session.js'\nimport SessionMiddleware from '../src/session_middleware.js'\n\n/**\n * Events emitted by the session class\n */\ndeclare module '@adonisjs/core/types' {\n  interface EventsList {\n    'session:initiated': { session: Session }\n    'session:committed': { session: Session }\n    'session:migrated': { fromSessionId: string; toSessionId: string; session: Session }\n  }\n}\n\n/**\n * Session provider configures the session management inside an\n * AdonisJS application\n */\nexport default class SessionProvider {\n  constructor(protected app: ApplicationService) {}\n\n  /**\n   * Registers edge plugin when edge is installed\n   * in the user application.\n   */\n  protected async registerEdgePlugin() {\n    if (this.app.usingEdgeJS) {\n      const edge = await import('edge.js')\n      const { edgePluginSession } = await import('../src/plugins/edge.js')\n      edge.default.use(edgePluginSession)\n    }\n  }\n\n  /**\n   * Registering muddleware\n   */\n  register() {\n    this.app.container.singleton(SessionMiddleware, async (resolver) => {\n      const sessionConfigProvider = this.app.config.get('session', {})\n\n      /**\n       * Resolve config from the provider\n       */\n      const config = await configProvider.resolve<any>(this.app, sessionConfigProvider)\n      if (!config) {\n        throw new RuntimeException(\n          'Invalid \"config/session.ts\" file. Make sure you are using the \"defineConfig\" method'\n        )\n      }\n\n      const emitter = await resolver.make('emitter')\n      return new SessionMiddleware(config, emitter)\n    })\n  }\n\n  /**\n   * Adding edge tags (if edge is installed)\n   */\n  async boot() {\n    await this.registerEdgePlugin()\n  }\n}\n"],"mappings":";;;;;;;;AASA,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AAqBjC,IAAqB,kBAArB,MAAqC;AAAA,EACnC,YAAsB,KAAyB;AAAzB;AAAA,EAA0B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMhD,MAAgB,qBAAqB;AACnC,QAAI,KAAK,IAAI,aAAa;AACxB,YAAM,OAAO,MAAM,OAAO,SAAS;AACnC,YAAM,EAAE,kBAAkB,IAAI,MAAM,OAAO,wBAAwB;AACnE,WAAK,QAAQ,IAAI,iBAAiB;AAAA,IACpC;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW;AACT,SAAK,IAAI,UAAU,UAAU,mBAAmB,OAAO,aAAa;AAClE,YAAM,wBAAwB,KAAK,IAAI,OAAO,IAAI,WAAW,CAAC,CAAC;AAK/D,YAAM,SAAS,MAAM,eAAe,QAAa,KAAK,KAAK,qBAAqB;AAChF,UAAI,CAAC,QAAQ;AACX,cAAM,IAAI;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,YAAM,UAAU,MAAM,SAAS,KAAK,SAAS;AAC7C,aAAO,IAAI,kBAAkB,QAAQ,OAAO;AAAA,IAC9C,CAAC;AAAA,EACH;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO;AACX,UAAM,KAAK,mBAAmB;AAAA,EAChC;AACF;","names":[]}