{"version":3,"sources":["../../../../src/plugins/japa/browser_client.ts"],"sourcesContent":["/*\n * @adonisjs/session\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { configProvider } from '@adonisjs/core'\nimport { RuntimeException } from '@poppinss/utils'\nimport type { PluginFn } from '@japa/runner/types'\nimport { decoratorsCollection } from '@japa/browser-client'\nimport type { ApplicationService } from '@adonisjs/core/types'\nimport type { CookieOptions as AdonisCookieOptions } from '@adonisjs/core/types/http'\n\nimport { SessionClient } from '../../client.js'\nimport type { SessionConfig, SessionData } from '../../types.js'\n\ndeclare module 'playwright' {\n  export interface BrowserContext {\n    sessionClient: SessionClient\n\n    /**\n     * Initiate session. The session id cookie will be defined\n     * if missing\n     */\n    initiateSession(options?: Partial<AdonisCookieOptions>): Promise<void>\n\n    /**\n     * Returns data from the session store\n     */\n    getSession(): Promise<any>\n\n    /**\n     * Returns data from the session store\n     */\n    getFlashMessages(): Promise<any>\n\n    /**\n     * Set session data\n     */\n    setSession(values: SessionData): Promise<void>\n\n    /**\n     * Set flash messages\n     */\n    setFlashMessages(values: SessionData): Promise<void>\n  }\n}\n\n/**\n * Transforming AdonisJS same site option to playwright\n * same site option.\n */\nfunction transformSameSiteOption(sameSite?: AdonisCookieOptions['sameSite']) {\n  if (!sameSite) {\n    return\n  }\n\n  if (sameSite === true || sameSite === 'strict') {\n    return 'Strict' as const\n  }\n\n  if (sameSite === 'lax') {\n    return 'Lax' as const\n  }\n\n  if (sameSite === 'none') {\n    return 'None' as const\n  }\n}\n\n/**\n * Transforming AdonisJS session config to playwright cookie options.\n */\nfunction getSessionCookieOptions(\n  config: SessionConfig,\n  cookieOptions?: Partial<AdonisCookieOptions>\n) {\n  const options = { ...config.cookie, ...cookieOptions }\n  return {\n    ...options,\n    expires: undefined,\n    sameSite: transformSameSiteOption(options.sameSite),\n  }\n}\n\n/**\n * Hooks AdonisJS Session with the Japa browser client\n * plugin\n */\nexport const sessionBrowserClient = (app: ApplicationService) => {\n  const pluginFn: PluginFn = async function () {\n    const sessionConfigProvider = app.config.get('session', {})\n\n    /**\n     * Resolve config from the provider\n     */\n    const config = await configProvider.resolve<any>(app, sessionConfigProvider)\n    if (!config) {\n      throw new RuntimeException(\n        'Invalid \"config/session.ts\" file. Make sure you are using the \"defineConfig\" method'\n      )\n    }\n\n    decoratorsCollection.register({\n      context(context) {\n        /**\n         * Reference to session client per browser context\n         */\n        context.sessionClient = new SessionClient(config.stores.memory())\n\n        /**\n         * Initiating session store\n         */\n        context.initiateSession = async function (options) {\n          const sessionId = await context.getCookie(config.cookieName)\n          if (sessionId) {\n            context.sessionClient.sessionId = sessionId\n            return\n          }\n\n          await context.setCookie(\n            config.cookieName,\n            context.sessionClient.sessionId,\n            getSessionCookieOptions(config, options)\n          )\n        }\n\n        /**\n         * Returns session data\n         */\n        context.getSession = async function () {\n          await context.initiateSession()\n          const sessionData = await context.sessionClient.load()\n          return sessionData.values\n        }\n\n        /**\n         * Returns flash messages from the data store\n         */\n        context.getFlashMessages = async function () {\n          await context.initiateSession()\n          const sessionData = await context.sessionClient.load()\n          return sessionData.flashMessages\n        }\n\n        /**\n         * Set session data\n         */\n        context.setSession = async function (values) {\n          await context.initiateSession()\n          context.sessionClient.merge(values)\n          await context.sessionClient.commit()\n        }\n\n        /**\n         * Set flash messages\n         */\n        context.setFlashMessages = async function (values) {\n          await context.initiateSession()\n          context.sessionClient.flash(values)\n          await context.sessionClient.commit()\n        }\n\n        /**\n         * Destroy session when context is closed\n         */\n        context.on('close', async function () {\n          await context.sessionClient.destroy()\n        })\n      },\n    })\n  }\n\n  return pluginFn\n}\n"],"mappings":";;;;;;;AASA,SAAS,sBAAsB;AAC/B,SAAS,wBAAwB;AAEjC,SAAS,4BAA4B;AA2CrC,SAAS,wBAAwB,UAA4C;AAC3E,MAAI,CAAC,UAAU;AACb;AAAA,EACF;AAEA,MAAI,aAAa,QAAQ,aAAa,UAAU;AAC9C,WAAO;AAAA,EACT;AAEA,MAAI,aAAa,OAAO;AACtB,WAAO;AAAA,EACT;AAEA,MAAI,aAAa,QAAQ;AACvB,WAAO;AAAA,EACT;AACF;AAKA,SAAS,wBACP,QACA,eACA;AACA,QAAM,UAAU,EAAE,GAAG,OAAO,QAAQ,GAAG,cAAc;AACrD,SAAO;AAAA,IACL,GAAG;AAAA,IACH,SAAS;AAAA,IACT,UAAU,wBAAwB,QAAQ,QAAQ;AAAA,EACpD;AACF;AAMO,IAAM,uBAAuB,CAAC,QAA4B;AAC/D,QAAM,WAAqB,iBAAkB;AAC3C,UAAM,wBAAwB,IAAI,OAAO,IAAI,WAAW,CAAC,CAAC;AAK1D,UAAM,SAAS,MAAM,eAAe,QAAa,KAAK,qBAAqB;AAC3E,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,yBAAqB,SAAS;AAAA,MAC5B,QAAQ,SAAS;AAIf,gBAAQ,gBAAgB,IAAI,cAAc,OAAO,OAAO,OAAO,CAAC;AAKhE,gBAAQ,kBAAkB,eAAgB,SAAS;AACjD,gBAAM,YAAY,MAAM,QAAQ,UAAU,OAAO,UAAU;AAC3D,cAAI,WAAW;AACb,oBAAQ,cAAc,YAAY;AAClC;AAAA,UACF;AAEA,gBAAM,QAAQ;AAAA,YACZ,OAAO;AAAA,YACP,QAAQ,cAAc;AAAA,YACtB,wBAAwB,QAAQ,OAAO;AAAA,UACzC;AAAA,QACF;AAKA,gBAAQ,aAAa,iBAAkB;AACrC,gBAAM,QAAQ,gBAAgB;AAC9B,gBAAM,cAAc,MAAM,QAAQ,cAAc,KAAK;AACrD,iBAAO,YAAY;AAAA,QACrB;AAKA,gBAAQ,mBAAmB,iBAAkB;AAC3C,gBAAM,QAAQ,gBAAgB;AAC9B,gBAAM,cAAc,MAAM,QAAQ,cAAc,KAAK;AACrD,iBAAO,YAAY;AAAA,QACrB;AAKA,gBAAQ,aAAa,eAAgB,QAAQ;AAC3C,gBAAM,QAAQ,gBAAgB;AAC9B,kBAAQ,cAAc,MAAM,MAAM;AAClC,gBAAM,QAAQ,cAAc,OAAO;AAAA,QACrC;AAKA,gBAAQ,mBAAmB,eAAgB,QAAQ;AACjD,gBAAM,QAAQ,gBAAgB;AAC9B,kBAAQ,cAAc,MAAM,MAAM;AAClC,gBAAM,QAAQ,cAAc,OAAO;AAAA,QACrC;AAKA,gBAAQ,GAAG,SAAS,iBAAkB;AACpC,gBAAM,QAAQ,cAAc,QAAQ;AAAA,QACtC,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA,EACH;AAEA,SAAO;AACT;","names":[]}