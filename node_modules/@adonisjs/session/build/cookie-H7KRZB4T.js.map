{"version":3,"sources":["../src/stores/cookie.ts"],"sourcesContent":["/*\n * @adonisjs/session\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport type { HttpContext } from '@adonisjs/core/http'\nimport type { CookieOptions } from '@adonisjs/core/types/http'\n\nimport debug from '../debug.js'\nimport type { SessionData, SessionStoreContract } from '../types.js'\n\n/**\n * Cookie store stores the session data inside an encrypted\n * cookie.\n */\nexport class CookieStore implements SessionStoreContract {\n  #ctx: HttpContext\n  #config: Partial<CookieOptions>\n\n  constructor(config: Partial<CookieOptions>, ctx: HttpContext) {\n    this.#config = config\n    this.#ctx = ctx\n    debug('initiating cookie store %O', this.#config)\n  }\n\n  /**\n   * Read session value from the cookie\n   */\n  read(sessionId: string): SessionData | null {\n    debug('cookie store: reading session data %s', sessionId)\n\n    const cookieValue = this.#ctx.request.encryptedCookie(sessionId)\n    if (typeof cookieValue !== 'object') {\n      return null\n    }\n\n    return cookieValue\n  }\n\n  /**\n   * Write session values to the cookie\n   */\n  write(sessionId: string, values: SessionData): void {\n    debug('cookie store: writing session data %s: %O', sessionId, values)\n    this.#ctx.response.encryptedCookie(sessionId, values, this.#config)\n  }\n\n  /**\n   * Removes the session cookie\n   */\n  destroy(sessionId: string): void {\n    debug('cookie store: destroying session data %s', sessionId)\n    if (this.#ctx.request.cookiesList()[sessionId]) {\n      this.#ctx.response.clearCookie(sessionId)\n    }\n  }\n\n  /**\n   * Updates the cookie with existing cookie values\n   */\n  touch(sessionId: string): void {\n    const value = this.read(sessionId)\n    debug('cookie store: touching session data %s', sessionId)\n    if (!value) {\n      return\n    }\n\n    this.write(sessionId, value)\n  }\n}\n"],"mappings":";;;;;AAmBO,IAAM,cAAN,MAAkD;AAAA,EACvD;AAAA,EACA;AAAA,EAEA,YAAY,QAAgC,KAAkB;AAC5D,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,kBAAM,8BAA8B,KAAK,OAAO;AAAA,EAClD;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK,WAAuC;AAC1C,kBAAM,yCAAyC,SAAS;AAExD,UAAM,cAAc,KAAK,KAAK,QAAQ,gBAAgB,SAAS;AAC/D,QAAI,OAAO,gBAAgB,UAAU;AACnC,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAmB,QAA2B;AAClD,kBAAM,6CAA6C,WAAW,MAAM;AACpE,SAAK,KAAK,SAAS,gBAAgB,WAAW,QAAQ,KAAK,OAAO;AAAA,EACpE;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,WAAyB;AAC/B,kBAAM,4CAA4C,SAAS;AAC3D,QAAI,KAAK,KAAK,QAAQ,YAAY,EAAE,SAAS,GAAG;AAC9C,WAAK,KAAK,SAAS,YAAY,SAAS;AAAA,IAC1C;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,WAAyB;AAC7B,UAAM,QAAQ,KAAK,KAAK,SAAS;AACjC,kBAAM,0CAA0C,SAAS;AACzD,QAAI,CAAC,OAAO;AACV;AAAA,IACF;AAEA,SAAK,MAAM,WAAW,KAAK;AAAA,EAC7B;AACF;","names":[]}