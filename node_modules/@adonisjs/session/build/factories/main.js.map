{"version":3,"sources":["../../factories/session_middleware_factory.ts"],"sourcesContent":["/*\n * @adonisjs/session\n *\n * (c) AdonisJS\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { Emitter } from '@adonisjs/core/events'\nimport { AppFactory } from '@adonisjs/core/factories/app'\nimport type { ApplicationService, EventsList } from '@adonisjs/core/types'\n\nimport { defineConfig } from '../index.js'\nimport SessionMiddleware from '../src/session_middleware.js'\nimport type { SessionConfig, SessionStoreFactory } from '../src/types.js'\n\n/**\n * Exposes the API to create an instance of the session middleware\n * without additional plumbing\n */\nexport class SessionMiddlewareFactory {\n  #config: Partial<SessionConfig> & {\n    store: string\n    stores: Record<string, SessionStoreFactory>\n  } = {\n    store: 'memory',\n    stores: {},\n  }\n\n  #emitter?: Emitter<EventsList>\n\n  #getApp() {\n    return new AppFactory().create(new URL('./', import.meta.url), () => {}) as ApplicationService\n  }\n\n  #getEmitter() {\n    return this.#emitter || new Emitter<EventsList>(this.#getApp())\n  }\n\n  /**\n   * Merge custom options\n   */\n  merge(options: {\n    config?: Partial<SessionConfig> & {\n      store: string\n      stores: Record<string, SessionStoreFactory>\n    }\n    emitter?: Emitter<EventsList>\n  }) {\n    if (options.config) {\n      this.#config = options.config\n    }\n\n    if (options.emitter) {\n      this.#emitter = options.emitter\n    }\n\n    return this\n  }\n\n  /**\n   * Creates an instance of the session middleware\n   */\n  async create() {\n    const config = await defineConfig(this.#config).resolver(this.#getApp())\n    return new SessionMiddleware(config, this.#getEmitter())\n  }\n}\n"],"mappings":";;;;;;;;;;;AASA,SAAS,eAAe;AACxB,SAAS,kBAAkB;AAWpB,IAAM,2BAAN,MAA+B;AAAA,EACpC,UAGI;AAAA,IACF,OAAO;AAAA,IACP,QAAQ,CAAC;AAAA,EACX;AAAA,EAEA;AAAA,EAEA,UAAU;AACR,WAAO,IAAI,WAAW,EAAE,OAAO,IAAI,IAAI,MAAM,YAAY,GAAG,GAAG,MAAM;AAAA,IAAC,CAAC;AAAA,EACzE;AAAA,EAEA,cAAc;AACZ,WAAO,KAAK,YAAY,IAAI,QAAoB,KAAK,QAAQ,CAAC;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAMH;AACD,QAAI,QAAQ,QAAQ;AAClB,WAAK,UAAU,QAAQ;AAAA,IACzB;AAEA,QAAI,QAAQ,SAAS;AACnB,WAAK,WAAW,QAAQ;AAAA,IAC1B;AAEA,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,SAAS;AACb,UAAM,SAAS,MAAM,aAAa,KAAK,OAAO,EAAE,SAAS,KAAK,QAAQ,CAAC;AACvE,WAAO,IAAI,kBAAkB,QAAQ,KAAK,YAAY,CAAC;AAAA,EACzD;AACF;","names":[]}