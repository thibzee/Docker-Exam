import type { Manifest } from 'vite';
import type { AdonisViteElement, ViteOptions } from './types.js';
/**
 * Vite class exposes the APIs to generate tags and URLs for
 * assets processed using vite.
 */
export declare class Vite {
    #private;
    constructor(options: ViteOptions);
    /**
     * Generate tags for the entry points
     */
    generateEntryPointsTags(entryPoints: string[] | string, attributes?: Record<string, any>): AdonisViteElement[];
    /**
     * Returns the dev server URL when running in hot
     * mode. Otherwise an empty string
     */
    devUrl(): string;
    /**
     * Returns the dev server URL when running in hot
     * mode, otherwise returns the explicitly configured
     * "assets" URL
     */
    assetsUrl(): string | undefined;
    /**
     * Returns path to a given asset file
     */
    assetPath(asset: string): string;
    /**
     * Returns the manifest file contents
     *
     * @throws Will throw an exception when running in hot mode
     */
    manifest(): Manifest;
    /**
     * Returns the script needed for the HMR working with React
     */
    getReactHmrScript(attributes?: Record<string, any>): AdonisViteElement | null;
}
